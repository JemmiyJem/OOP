#include <iostream>
#include <algorithm>
using namespace std;

class Stack {
private:
    int data[100];
    int n;

public:
    Stack() : n(0) {}

    void nhap() {
        cin >> n;
        for (int i = 0; i < n; ++i) {
            cin >> data[i];
        }
    }

    void xuat() {
        for (int i = 0; i < n; ++i) {
            cout << data[i] << " ";
        }
        cout << endl;
    }

    int getSoPhanTu() const {
        return n;
    }

    void push(int value) {
        if (n < 100) {
            data[n++] = value;
        }
    }

    void pop() {
        if (n > 0) {
            --n;
        }
    }

    void clear() {
        n = 0;
    }
};

int main() {
    Stack s;
    s.nhap();
    s.xuat();
    s.push(42); //vd
    s.xuat();
    s.pop();
    s.xuat();
    s.clear();
    s.xuat();
    return 0;
}
